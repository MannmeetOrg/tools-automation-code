- name: Setup Prompt
  ansible.builtin.shell: set-prompt workstation

- name: Add HashiCorp GPG key
  ansible.builtin.rpm_key:
    state: present
    key: https://rpm.releases.hashicorp.com/gpg

- name: Add HashiCorp repository
  ansible.builtin.yum_repository:
    name: hashicorp
    description: HashiCorp Stable - $basearch
    baseurl: https://rpm.releases.hashicorp.com/RHEL/$releasever/$basearch/stable
    enabled: yes
    gpgcheck: yes
    gpgkey: https://rpm.releases.hashicorp.com/gpg

- name: Install Terraform
  ansible.builtin.dnf:
    name: terraform
    state: latest
  become: true

- name: Install Ansible
  ansible.builtin.shell: pip-3.11 install ansible


- name: Update system packages
  ansible.builtin.dnf:
    name: '*'
    state: latest

- name: Install required packages for Docker
  ansible.builtin.dnf:
    name:
      - dnf-plugins-core
    state: present

- name: Add Docker repository
  ansible.builtin.yum_repository:
    name: docker
    description: Docker CE Repository
    baseurl: https://download.docker.com/linux/rhel/$releasever/$basearch/stable
    gpgcheck: yes
    gpgkey: https://download.docker.com/linux/rhel/gpg
    enabled: yes

- name: Clean DNF cache
  ansible.builtin.shell: dnf clean all
  become: true

- name: Rebuild DNF cache
  ansible.builtin.shell: dnf makecache
  become: true

- name: Install Docker Engine
  ansible.builtin.dnf:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
    state: present
  become: true

- name: Ensure Docker service is started and enabled
  ansible.builtin.systemd:
    name: docker
    state: started
    enabled: yes

- name: Install required packages for Kubernetes
  ansible.builtin.dnf:
    name:
      - dnf-plugins-core
    state: present

- name: Add Kubernetes repository
  ansible.builtin.yum_repository:
    name: kubernetes
    description: Kubernetes Repository
    baseurl: https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
    gpgcheck: yes
    gpgkey: https://packages.cloud.google.com/yum/doc/yum-key.gpg
    enabled: yes

- name: Install Kubernetes components (kubelet, kubeadm, kubectl)
  ansible.builtin.dnf:
    name:
      - kubelet
      - kubeadm
      - kubectl
    state: present
  become: true

- name: Ensure kubelet service is started and enabled
  systemd:
    name: kubelet
    state: started
    enabled: yes

#- name: Initialize Kubernetes master (only for the first node)
#  command: kubeadm init --kubernetes-version={{ kubernetes_version }}
#  when: inventory_hostname in groups['master']
#  register: init_result
#  changed_when: "'kubeadm init' in init_result.stdout"
#
#- name: Set up kubeconfig for the user (only for the first node)
#  become_user: "{{ ansible_user }}"
#  command: |
#    mkdir -p /home/{{ ansible_user }}/.kube
#    cp /etc/kubernetes/admin.conf /home/{{ ansible_user }}/.kube/config
#    chown {{ ansible_user }}:{{ ansible_user }} /home/{{ ansible_user }}/.kube/config
#  when: inventory_hostname in groups['master']
#
#- name: Install CNI plugins (only for the first node)
#  become_user: "{{ ansible_user }}"
#  command: kubectl apply -f https://docs.projectcalico.org/manifests/calico.yaml
#  when: inventory_hostname in groups['master']

#  - name: Join worker nodes to the Kubernetes cluster
#    command: kubeadm join {{ hostvars[groups['master'][0]]['ansible_default_ipv4']['address'] }}:6443 --token {{ hostvars[groups['master'][0]]['kubeadm_token'] }} --discovery-token-ca-cert-hash sha256:{{ hostvars[groups['master'][0]]['ca_cert_hash'] }}
#    when: inventory_hostname in groups['worker']


